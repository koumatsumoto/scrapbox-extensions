@import 'variables';

// Noto Sans JP
@import url('https://fonts.googleapis.com/css?family=Noto+Sans+JP:400,500,700,900&display=swap&subset=japanese');
// Kosugi Maru
@import url('https://fonts.googleapis.com/css?family=Kosugi+Maru&display=swap&subset=cyrillic,japanese');
// Source Code Pro
@import url('https://fonts.googleapis.com/css?family=Source+Code+Pro&display=swap');

// show "#" on editing to visible cursor
.cursor-line {
  a[type='hashTag'] {
    span:first-child {
      display: inline !important;
    }
  }
}

.line {
  font-family: 'Noto Sans JP', sans-serif !important;

  // outermost, first child of .line
  // text.code-block
  .code-block {
    font-family: 'Source Code Pro', sans-serif !important;
    background: map_get($material-colors, 'grey-800') !important;

    // label like as "bash", "style.css"
    .code-block-start {
      color: map_get($material-colors, 'grey-100') !important;
      background: map_get($material-colors, 'grey-700') !important;
    }

    // normal code text
    .code-body {
      color: map_get($material-colors, 'grey-100') !important;
    }

    .hljs-comment {
      color: map_get($material-colors, 'grey-600') !important;
    }
  }

  .text {
    color: map_get($material-colors, 'blue-grey-800') !important;
  }

  a {
    &.page-link {
      &,
      &:link,
      &:visited,
      &:hover,
      &:active {
        color: map_get($COLORS, 'page-link') !important;
        text-decoration: none;
      }
    }

    &.empty-page-link {
      &,
      &:link,
      &:visited,
      &:hover,
      &:active {
        color: map_get($COLORS, 'empty-page-link') !important;
        text-decoration: none;
      }
    }

    // hash tag
    &[type='hashTag'] {
      $color: map_get($COLORS, 'hash-tag');
      $border: 1px solid $color;
      $font-size: map_get($font-size, 'bordered-tag');
      $color-hovered: map_get($COLORS, 'hash-tag-hovered');

      // "#"
      span:first-child {
        display: none;
      }

      &,
      &:link,
      &:visited,
      &:hover,
      &:active {
        display: inline-block;
        padding: 6px 2px;
        color: $color !important;
        transition: color 160ms map_get($easing, easeInOutCirc),
          transform 80ms map_get($easing, easeInOutCirc);
      }

      &:hover {
        color: $color-hovered !important;
        transform: scale(1.024);
      }
    }
  }
}
